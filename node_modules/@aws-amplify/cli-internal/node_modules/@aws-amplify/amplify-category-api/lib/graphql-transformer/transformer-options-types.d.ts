import { AppSyncAuthConfiguration, TransformerPluginProvider, Template } from '@aws-amplify/graphql-transformer-interfaces';
import { OverrideConfig, ResolverConfig, TransformerProjectConfig } from '@aws-amplify/graphql-transformer-core';
import { DiffRule, ProjectRule } from 'graphql-transformer-core';
import { $TSAny } from 'amplify-cli-core';
export declare type TransformerProjectOptions<T> = {
    buildParameters: {
        S3DeploymentBucket: string;
        S3DeploymentRootKey: string;
    };
    projectDirectory: string;
    transformersFactory: (options: T) => Promise<TransformerPluginProvider[]>;
    transformersFactoryArgs: T;
    rootStackFileName: 'cloudformation-template.json';
    currentCloudBackendDirectory?: string;
    lastDeployedProjectConfig?: TransformerProjectConfig;
    projectConfig: TransformerProjectConfig;
    resolverConfig?: ResolverConfig;
    dryRun?: boolean;
    authConfig?: AppSyncAuthConfiguration;
    stacks: Record<string, Template>;
    sandboxModeEnabled?: boolean;
    sanityCheckRules: SanityCheckRules;
    overrideConfig: OverrideConfig;
};
declare type SanityCheckRules = {
    diffRules: DiffRule[];
    projectRules: ProjectRule[];
};
export declare type TransformerFactoryArgs = {
    addSearchableTransformer: boolean;
    authConfig: $TSAny;
    storageConfig?: $TSAny;
    adminRoles?: Array<string>;
    identityPoolId?: string;
};
export {};
//# sourceMappingURL=transformer-options-types.d.ts.map